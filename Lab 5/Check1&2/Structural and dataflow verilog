`default_nettype none
// Empty top module

module top (
  // I/O ports
  input  logic hz100, reset,
  input  logic [20:0] pb,
  output logic [7:0] left, right,
         ss7, ss6, ss5, ss4, ss3, ss2, ss1, ss0,
  output logic red, green, blue,

  // UART ports
  output logic [7:0] txdata,
  input  logic [7:0] rxdata,
  output logic txclk, rxclk,
  input  logic txready, rxready
);
  // Structural verilog
  and(right[0], pb[1], pb[0]);
  or(right[1], pb[1], pb[0]);
  nand(right[2], pb[1], pb[0]);
  nor(right[3], pb[1], pb[0]);
  xor(right[4], pb[1], pb[0]);
  
  // Dataflow verilog
  assign left[0] = pb[1] && pb[0]; // AND gate
  assign left[1] =  pb[1] | pb[0]; // OR gate
  assign left[2] = ~(pb[1] && pb[0]); // NAND gate
  assign left[3] =  ~(pb[1] | pb[0]); // NOR gate
  assign left[4] = pb[1] ^ pb[0]; // XOR gate


endmodule 